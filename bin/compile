#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e
unset GIT_DIR
exec > >(sed 's/^/[Flutter Buildpack]: /')

function print() {
  echo "$1"
}
function export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-''}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
        export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}

export_env_dir "$3"
mkdir -p $CACHE_DIR

cd $BUILD_DIR
if [ -d $CACHE_DIR/flutter ]; then
  print "Restoring SDK from CACHE"
  cp -R $CACHE_DIR/flutter $BUILD_DIR
else
  print "Installing SDK from Github repository."
  git clone -b master https://github.com/flutter/flutter.git
  # curl -L -k $FLUTTER_SDK_URL > flutter-sdk.tar.xz ; tar xf flutter-sdk.tar.xz
  # print "Changing to beta channel"
  # flutter/bin/flutter channel beta

  print "Enablig Web support"
  # flutter/bin/flutter channel beta --quiet
  flutter/bin/flutter upgrade --quiet
fi

# Load bash variables from flutter --machine --version
flutter/bin/flutter --machine --version > flutter.json
. <(sed 's/^ *\|[{}",]*//g; /^ *$/{d;n}; s/: /="/; s/$/"/; /=/!{d;n}' flutter.json)

if [ -n "$FLUTTER_VERSION" ]; then
  
  if [ "$FLUTTER_VERSION" != "$frameworkVersion" ]; then
    print "Installing SDK version : $FLUTTER_VERSION"
    flutter/bin/flutter version $FLUTTER_VERSION --quiet  
  fi
  rm flutter.json

else
  print "FLUTTER UPGRADE"
  
  if [ $channel != "beta" ];then
    flutter/bin/flutter channel beta --quiet
  fi

  flutter/bin/flutter upgrade --quiet
fi

print "ENABLE FLUTTER WEB"
flutter/bin/flutter config --enable-web --quiet

print "FLUTTER CLEANING "
flutter/bin/flutter clean --quiet

print "GETTING PACKAGES"
flutter/bin/flutter pub get --quiet

# print "ENABLE FLUTTER WEB"
# flutter/bin/flutter config --enable-web --quiet

print "BUILDING FLUTTER WEB APP"
flutter/bin/flutter build web --release --quiet
# --dart-define=FLUTTER_WEB_USE_EXPERIMENTAL_CANVAS_TEXT=true

# Saving SDK in Cache
if [ -x flutter/bin/flutter ]; then
  print "SAVING IN CACHE"
  rm -rf $CACHE_DIR/flutter
  cp -R $BUILD_DIR/flutter $CACHE_DIR/flutter
  rm -rf $BUILD_DIR/flutter
fi

# Move only web files.
cd $BUILD_DIR
mkdir TO_DELETE
shopt -s extglob
mv !("TO_DELETE") TO_DELETE
mv TO_DELETE/build/web/* $BUILD_DIR
rm -rf TO_DELETE

# Build web files to deploy.
echo '{}' >composer.json
echo '<?php include_once("index.html"); ?>' >index.php
