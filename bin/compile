#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e
unset GIT_DIR

function print {
  echo "$1"
}
function export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-''}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}


BUILD_DIR=${1:-}
CACHE_DIR=${2:-}

export_env_dir "$3"


# Check ENV VARS
if [ -z "$DART_SDK_URL" ]; then
    print "ERROR: you must specify DART_SDK_URL to a Dart SDK for Linux."
    exit 1
fi
if [ -z "$FLUTTER_SDK_URL" ]; then
    print "ERROR: you must specify FLUTTER_SDK_URL to a Flutter SDK for Linux."
    exit 1
fi

print "Creating CACHE_DIR if not exists"
mkdir -p $CACHE_DIR

if [ -d $CACHE_DIR/dart-sdk ]; then
  print "-----> Restoring DART from cache"
  cp -R $CACHE_DIR/dart-sdk/. $BUILD_DIR
else
  print "-----> Installing Dart VM via URL $DART_SDK_URL"
  cd $BUILD_DIR
  case "${DART_SDK_URL: -3}" in
    tar)
      print "SDK: tarball detected"
      curl -L -k $DART_SDK_URL -o - | tar xzf -
      ;;
    zip)
      print "SDK: zip detected"
      curl -L -k $DART_SDK_URL > dart-sdk.zip ; unzip -o -q dart-sdk.zip
      ;;
    *)
      print "Invalid Dart SDK URL"
      ;;
  esac
fi

if [ -d $CACHE_DIR/flutter ]; then
  print "-----> Restoring FLUTTER from Cache"
  cp -R $CACHE_DIR/flutter $BUILD_DIR

else
  print "-----> Installing Flutter SDK via URL $FLUTTER_SDK_URL"
  cd $BUILD_DIR
  curl -L -k $FLUTTER_SDK_URL > flutter-sdk.tar.xz ; tar xf flutter-sdk.tar.xz
  
  print "----> Changing to beta channel in Flutter"
  # flutter/bin/flutter channel beta

  cd flutter
  git pull
  cd .. 
fi

cd $BUILD_DIR
# flutter/bin/flutter version 1.19.0-4.3.pre

if [-z "$FLUTTER_UPGRADE"] || ["$FLUTTER_UPGRADE" = true] ; then
  print "----> FLUTTER UPGRADE"
  flutter/bin/flutter upgrade
fi

print "----> FLUTTER CLEANING "
flutter/bin/flutter clean

print "----> GETTING PACKAGES"
flutter/bin/flutter pub get

print "----> ENABLE FLUTTER WEB"
flutter/bin/flutter config --enable-web 

print "----> BUILDING FLUTTER WEB APP"
flutter/bin/flutter build web --release --dart-define=FLUTTER_WEB_USE_EXPERIMENTAL_CANVAS_TEXT=true

# Saving SDK in Cache
if [ -x dart-sdk/bin/dart ]; then
  print "----> SAVING DART IN CACHE"
  rm -rf $CACHE_DIR/dart-sdk
  cp -R $BUILD_DIR/dart-sdk $CACHE_DIR/dart-sdk
  rm -rf $BUILD_DIR/dart-sdk
fi

if [ -x flutter/bin/flutter ]; then
  print "----> SAVING FLUTTER IN CACHE"
  rm -rf $CACHE_DIR/flutter
  cp -R $BUILD_DIR/flutter $CACHE_DIR/flutter
  rm -rf $BUILD_DIR/flutter
fi


# Move only web files.
cd $BUILD_DIR
mkdir TO_DELETE
shopt -s extglob
mv !("TO_DELETE") TO_DELETE
mv TO_DELETE/build/web/* $BUILD_DIR  
rm -rf TO_DELETE


echo '{}' > composer.json
echo '<?php include_once("index.html"); ?>' > index.php